[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://b7s32cdvk7ivd"]

[ext_resource type="Script" uid="uid://8opi7wxpgtlp" path="res://addons/shaderV/uv/animated/rotateAnimated.gd" id="1_wd1bm"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nbkfn"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_yvtdl"]
source = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8iy7y"]
input_name = "uv"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_4i72y"]
default_input_values = [1, 2.015, 2, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("1_wd1bm")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7i0mr"]
input_name = "time"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;



// RotateUVAnimated
vec2 _rotateUVAnimatedFunc(vec2 _uv_rotate, vec2 _pivot_rotate, float _rotation_rotate, float _rotSpeed_rotate, float _time_rotate){
	_rotation_rotate += _time_rotate * _rotSpeed_rotate;
	//_rotation_rotate = radians(_rotationDeg_rotate);
	vec2 _rotAngle = vec2(cos(_rotation_rotate), sin(_rotation_rotate));
	_uv_rotate -= _pivot_rotate;
	_uv_rotate = vec2((_uv_rotate.x*_rotAngle.x-_uv_rotate.y*_rotAngle.y),(_uv_rotate.x*_rotAngle.y+_uv_rotate.y*_rotAngle.x));
	_uv_rotate += _pivot_rotate;
	return _uv_rotate;
}

void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


// Input:6
	float n_out6p0 = TIME;


	vec3 n_out5p0;
// RotateUVAnimated:5
	float n_in5p1 = 2.01500;
	vec3 n_in5p2 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out5p0 = vec3(_rotateUVAnimatedFunc(vec3(n_out4p0, 0.0).xy, n_in5p2.xy, 0.0, n_in5p1, n_out6p0), 0);
	}


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, vec2(n_out5p0.xy));


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1420, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_nbkfn")
nodes/fragment/2/position = Vector2(-180, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_yvtdl")
nodes/fragment/3/position = Vector2(180, -40)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_8iy7y")
nodes/fragment/4/position = Vector2(-460, -40)
nodes/fragment/5/node = SubResource("VisualShaderNodeCustom_4i72y")
nodes/fragment/5/position = Vector2(-80, 20)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_7i0mr")
nodes/fragment/6/position = Vector2(-480, 120)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0, 4, 0, 5, 0, 5, 0, 3, 0, 6, 0, 5, 3)
